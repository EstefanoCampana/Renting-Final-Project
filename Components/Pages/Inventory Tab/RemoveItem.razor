@page "/removeItem"
<div class="d-flex justify-content-between">
    <div class="preview-container">
        <div class="preview-box">
            @if (!string.IsNullOrEmpty(itemModel.ImageBase64))
            {
                <img src="data:image/png;base64,@itemModel.ImageBase64" alt="Preview" />
            }
        </div>
        <p>Equipment Preview</p>
    </div>
    <div class="form-container">
        <EditForm Model="@itemModel">
            <div class="form-group mb-3">
                <label for="title">Name of the Equipment</label>
                <InputText id="title" class="form-control" @bind-Value="itemModel.Title" />
            </div>
            <label for="category">Status</label>
            <div class="d-flex flex-nowrap form-group mb-3">
                <InputSelect class="form-select" @bind-Value="itemModel.Status">
                    <option value="" disabled selected>Select a category</option>
                    <option value="itemModel.Status">Active</option>
                    <option value="itemModel.Status">On Maintenance</option>
                    <option value="itemModel.Status">Broken</option>
                </InputSelect>
            </div>

            <div class="text-center">
                <button @onclick="() => DeleteItem()" class="btn btn-warning mb-3">Delete Item</button>
            </div>
        </EditForm>
    </div>
</div>
<div class="d-flex justify-content-center">
    <NavLink class="btn btn-secondary" href="inventory">Back</NavLink>
</div>

@if (!string.IsNullOrEmpty(ItemModelManager.errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ItemModelManager.errorMessage
    </div>
}

@code {
    private ItemModel itemModel { get; set; } = new ItemModel();
    private List<ItemModel> items = ItemModelManager.GetItems();
    private List<string> categories = ItemModelManager.GetCategories();


    public async Task DeleteItem()
    {
        string message = $"Item has been deleted succesfully.";
        try
        {
            var result = await App.Current.MainPage.DisplayAlert("Are you sure?", "This cannot be reverted.", "OK", "Cancel");
            if(result == true)
            {
                if (String.IsNullOrEmpty(itemModel.Title))
                {
                    ItemModelManager.errorMessage = "Please provide the equipment's name.";
                }
                else
                {
                    ItemModelManager.errorMessage = "";
                    ItemModelManager.DeleteItem(itemModel);
                    await App.Current.MainPage.DisplayAlert("Success", $"{message}", "OK");
                    itemModel.Title = "";
                    itemModel.Status = "";
                }
            }
            
        }
        catch (Exception ex)
        {
            ItemModelManager.errorMessage = ex.Message;
        }
    }

}
